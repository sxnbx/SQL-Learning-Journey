# ðŸ“Œ SQL `IN` Operator â€“ Quick Notes

## ðŸ§  What is the `IN` operator?

The `IN` operator lets you check if a value matches **any value in a list**. Itâ€™s a more compact and readable way to write multiple `OR` conditions in SQL.

### ðŸ†š Traditional `OR` vs `IN`
```sql
-- Long way
SELECT *
FROM customers
WHERE state = 'PA' OR state = 'TX' OR state = 'IL';

-- Cleaner way
SELECT *
FROM customers
WHERE state IN ('PA', 'TX', 'IL');

-- Basic IN Example
SELECT *
FROM customers
WHERE state IN ('PA', 'TX', 'IL');
-- This will return all customers whose state is either Pennsylvania, Texas, or Illinois

-- NOT IN Example
SELECT *
FROM customers
WHERE first_name NOT IN ('Kevin', 'Kelly', 'Frodo');
-- This will give you everyone except Kevin, Kelly, and Frodo.

-- More IN Examples
SELECT *
FROM customers
WHERE first_name IN ('Kevin', 'Kelly', 'Frodo');

-- Sample Output (Based on Hypothetical Data)
Let's say our customers table looks like this:

| customer\_id | first\_name | last\_name | state |
| ------------ | ----------- | ---------- | ----- |
| 1            | Kevin       | Smith      | PA    |
| 2            | Kelly       | Johnson    | TX    |
| 3            | Frodo       | Baggins    | IL    |
| 4            | Sam         | Gamgee     | OH    |
| 5            | Luna        | Lovegood   | VA    |

-- In query results
SELECT *
FROM customers
WHERE first_name IN ('Kevin', 'Kelly', 'Frodo');

| customer\_id | first\_name | last\_name | state |
| ------------ | ----------- | ---------- | ----- |
| 1            | Kevin       | Smith      | PA    |
| 2            | Kelly       | Johnson    | TX    |
| 3            | Frodo       | Baggins    | IL    |

-- NOT IN query result
SELECT *
FROM customers
WHERE first_name NOT IN ('Kevin', 'Kelly', 'Frodo');

| customer\_id | first\_name | last\_name | state |
| ------------ | ----------- | ---------- | ----- |
| 4            | Sam         | Gamgee     | OH    |
| 5            | Luna        | Lovegood   | VA    |




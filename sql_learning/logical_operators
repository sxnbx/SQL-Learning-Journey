# 🔍 SQL Logical Operators: `AND`, `OR`, `NOT`

Logical operators in SQL allow you to combine multiple conditions in the `WHERE` clause to refine your query results.

---

## 🧠 Operator Summary

| Operator | Description                                                                 |
|----------|-----------------------------------------------------------------------------|
| `AND`    | Returns rows where **both** conditions are true.                            |
| `OR`     | Returns rows where **at least one** condition is true.                      |
| `NOT`    | Negates a condition; returns rows where the condition is **false**.         |

---

## 🧪 Example Queries

### 1️⃣ Return all customers
```sql
SELECT *
FROM customers;

# SQL Logical Operators: AND, OR, NOT

###2️⃣ Customers from Pennsylvania **AND** who spent more than $1,000  
SELECT *  
FROM customers  
WHERE state = 'PA' AND total_money_spent > 1000;

####3️⃣ Customers from Pennsylvania **OR** who spent more than $1,000  
SELECT *  
FROM customers  
WHERE state = 'PA' OR total_money_spent > 1000;

###4️⃣ Customers from PA **or** New York **AND** spent more than $1,000  
SELECT *  
FROM customers  
WHERE (state = 'PA' OR city = 'New York') AND total_money_spent > 1000;

###5️⃣ Customers who either:  
- Live in PA and spent more than $1,000 **OR**  
- Were born after January 1, 1998  
SELECT *  
FROM customers  
WHERE (state = 'PA' AND total_money_spent > 1000)  
   OR birth_date > '1998-01-01';

###6️⃣ Customers **NOT** from Pennsylvania  
SELECT *  
FROM customers  
WHERE NOT state = 'PA';

##📝 Alternative syntax using `!=`:  
SELECT *  
FROM customers  
WHERE state != 'PA';

###7️⃣ Customers who did **NOT** spend more than $1,000  
SELECT *  
FROM customers  
WHERE NOT total_money_spent > 1000;

###8️⃣ Customers who did **NOT**:  
- Spend more than $1,000 **AND**  
- Live in Texas  
SELECT *  
FROM customers  
WHERE NOT (total_money_spent > 1000 AND state = 'TX');
